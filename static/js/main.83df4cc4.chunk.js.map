{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","sortField","setSortField","visibleGoods","goods","preparedGoods","sort","good1","good2","abc","localeCompare","length","reverse","getPreparedGood","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,qBAAAA,E,iBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAhCR,SACEC,EACAH,EACAF,GAEA,IAAMM,EAAa,YAAOD,GAqB1B,OAnBIH,GACFI,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQP,GACN,KAAKN,EAASc,IACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXZ,GACFM,EAAcO,UAGTP,EAMcQ,CAAgBjB,EAAiBK,EAAWF,GAOjE,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaP,EAASc,MACrCO,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYhB,IAAcN,EAASc,MAJvC,iCAUA,wBACEM,QAAS,kBAAMb,EAAaP,EAASgB,SACrCK,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYhB,IAAcN,EAASgB,SAJvC,4BAUA,wBACEI,QAAS,kBAAMf,GAAeD,IAC9BiB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAA2B,IAAflB,IAJhB,sBAUEE,GAAaF,IACb,wBACEgB,QAxCI,WACZb,EAAa,IACbF,GAAc,IAuCNgB,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGX,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCzGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.83df4cc4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  abc = 'alphabetically',\n  length = 'length',\n}\n\nfunction getPreparedGood(\n  goods: string[],\n  sortField: string,\n  isReversed: boolean,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.abc:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortField, setSortField] = useState('');\n  const visibleGoods = getPreparedGood(goodsFromServer, sortField, isReversed);\n\n  const reset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SortType.abc)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SortType.abc,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortType.length)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SortType.length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': isReversed === false,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}